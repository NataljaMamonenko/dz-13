import java.sql.*;
import java.util.ArrayList;
import java.util.List;

import static sun.security.util.Debug.args;

public class DBReaderLection{
    public final static String URL = "jdbc:postgresql://localhost:5432/postgres";

    public final static String USER_NAME = "postgres";
    public final static String USER_PASSWORD = "postgres";
    public final static String QUERY_SELECT_ALL = "select * from numbers";
    public final static String QUERY_INSERT = "insert into numbers values (?, ?, ?)";
    public final static String QUERY_UPDATE = "update numbers set num2=? where id=?";
    public final static String QUERY_DELETE = "delete from numbers where id=?";

    public static List<Number> getNumbersFromDB() {
        List<Number> numbers = new ArrayList<>();

        try (Connection connection = DriverManager.getConnection(URL, USER_NAME, USER_PASSWORD)) {
            Statement sqlStatement = connection.createStatement();
            ResultSet resultSet = sqlStatement.executeQuery(QUERY_SELECT_ALL);

            while (resultSet.next()) {
                Number number = new Number(resultSet.getInt("num1"), resultSet.getInt("num2"));
                numbers.add(number);
            }

        } catch (SQLException exception) {
            throw new RuntimeException(String.format("Please check connection String" +
                    ". URL [%s], name [%s], pass [%s]", URL, USER_NAME, USER_PASSWORD));
        }
        return numbers;
    }

    public static void insert(int id, int num1, int num2) {
        try (Connection connection = DriverManager.getConnection(URL, USER_NAME, USER_PASSWORD)) {

            PreparedStatement preparedStatement = connection.prepareStatement(QUERY_INSERT);
            PreparedStatement.setInt(1, id);
            PreparedStatement.setInt(2, num1);
            PreparedStatement.setInt(3, num2);
            PreparedStatement.executeUpdate();
        } catch (SQLException exception) {
            throw new RuntimeException(String.format("Please check connection String" +
                    ". URL [%s], name [%s], pass [%s]", URL, USER_NAME, USER_PASSWORD));
        }
    }

    public static void update(int id, int num2) {
        try (Connection connection = DriverManager.getConnection(URL, USER_NAME, USER_PASSWORD)) {

            PreparedStatement preparedStatement = connection.prepareStatement(QUERY_UPDATE);
            PreparedStatement.setInt(1, id);
            PreparedStatement.setInt(3, num2);
            PreparedStatement.executeUpdate();
        } catch (SQLException exception) {
            throw new RuntimeException(String.format("Please check connection String" +
                    ". URL [%s], name [%s], pass [%s]", URL, USER_NAME, USER_PASSWORD));
        }

        public static void delete(int id) {
            try (Connection connection = DriverManager.getConnection(URL, USER_NAME, USER_PASSWORD)) {

                PreparedStatement preparedStatement = connection.prepareStatement(QUERY_DELETE);
                PreparedStatement.setInt(1, id);
                PreparedStatement.executeUpdate();
            } catch (SQLException exception) {
                throw new RuntimeException(String.format("Please check connection String" +
                        ". URL [%s], name [%s], pass [%s]", URL, USER_NAME, USER_PASSWORD));
            }


            public static void main(String[] args) {
                List<Number> numbers = getNumbersFromDB();
                for (Number number : numbers) {
                    System.out.println(number);
                }
            }

        }
    }

}